window.onload = () => {


    // --- DICION√ÅRIO DE IDIOMAS COM ITENS TRADUZIDOS ---
    // (Mantive os nomes de arquivos que voc√™ atualizou, como 'folha_seca_padrao.png', 'pedaco_de_metal_padrao.png' e 'guardanapo_padrao.png')
    const fase2LangData = {
        'pt': {
            titulo_pagina: "SafeQuest - Guardi√£o da Reciclagem",
            titulo_principal: "SafeQuest",
            subtitulo_fase: "Fase 2: Guardi√£o da Reciclagem",
            intro_texto: "O rio precisa da sua ajuda! Arraste cada tipo de lixo para a lixeira correta para limpar o ambiente. Seja r√°pido e ganhe tempo b√¥nus!",
            btn_comecar: "Come√ßar!",
            btn_continuar: "Continuar",
            lixos_label: "Lixos:",
            etapa_label: "Etapa",
            livro_anterior: "‚óÄ P√°gina Anterior",
            livro_proximo: "Pr√≥xima P√°gina ‚ñ∂",
            livro_pagina: "P√°gina",
            // === ADICIONADO: Chaves para o aviso de orienta√ß√£o ===
            orientation_titulo: "Vire o seu dispositivo",
            orientation_texto: "Para uma melhor experi√™ncia, este jogo deve ser jogado com a tela na horizontal.",
            // ---
            dialogo_tutorial_titulo: "Bem-vindo, Guardi√£o!",
            dialogo_tutorial_texto: "Ol√°, Guardi√£o! O rio est√° cheio de lixo e precisamos da sua ajuda para limp√°-lo. Sua miss√£o √© arrastar cada item para a lixeira da cor correta. Lembre-se, cada lixo no lugar certo ajuda a salvar nosso planeta. Vamos come√ßar essa limpeza?",
            stage_1_title: "Etapa 1: Come√ßando a Limpeza",
            stage_1_text: "Restos de comida v√£o na lixeira marrom, e pap√©is na azul. Vamos come√ßar a limpar!",
            stage_2_title: "Etapa 2: Cuidado com o Perigo!",
            stage_2_text: "Vidros v√£o na verde para sua seguran√ßa! E as latinhas de metal, sempre na amarela.",
            stage_3_title: "Etapa 3: O Inimigo Pl√°stico",
            stage_3_text: "Pl√°stico polui muito! Jogue sempre na vermelha para garantir a reciclagem.",
            stage_4_title: "Etapa Final: Desafio Mestre!",
            stage_4_text: "Aten√ß√£o total! Itens como pilhas e fraldas v√£o para a lixeira cinza de rejeitos.",
            macaw_praise_1: "Reciclagem perfeita! Voc√™ acertou em cheio.",
            macaw_praise_2: "Isso mesmo! Cada lixo no seu devido lugar.",
            macaw_praise_3: "√ìtimo trabalho! O planeta agradece sua ajuda.",
            macaw_praise_4: "Exato! Voc√™ sabe exatamente onde descartar cada item.",
            macaw_hint_1: "Opa! Parece que esse lixo n√£o pertence a essa lixeira. Tente novamente.",
            macaw_hint_2: "Quase! Verifique o material desse item. O Guia de Reciclagem pode ajudar.",
            macaw_hint_3: "Essa n√£o √© a lixeira correta. Pense no tipo de material.",
            macaw_hint_4: "Um pequeno engano! Tente arrastar para outra lixeira.",
            macaw_perf_1: "Voc√™ deu os primeiros passos como Guardi√£o da Reciclagem! Continue praticando e logo ser√° um expert!",
            macaw_perf_2: "Seu progresso √© not√°vel! Voc√™ est√° ajudando muito a limpar o rio. Continue assim!",
            macaw_perf_3: "Incr√≠vel! Voc√™ dominou a arte da reciclagem e limpou tudo com perfei√ß√£o. Parab√©ns!",
            macaw_defeat_1: "O tempo acabou, mas n√£o desanime! A reciclagem exige pr√°tica. Tente de novo!",
            macaw_defeat_2: "N√£o foi dessa vez, mas cada item que voc√™ reciclou j√° fez a diferen√ßa. Na pr√≥xima, voc√™ ser√° mais r√°pido!",
            macaw_defeat_3: "O rel√≥gio foi mais r√°pido, mas sua vontade de ajudar √© o que conta. Vamos para a pr√≥xima tentativa!",
            macaw_other_1: "Continue assim! Cada pedacinho de lixo reciclado √© uma vit√≥ria.",
            macaw_other_2: "Lembre-se: separar o lixo √© um ato importante para o meio ambiente.",
            macaw_other_3: "O Guia de Reciclagem est√° a√≠ para ajudar se surgir alguma d√∫vida!",
            end_title_win: "Mestre da Reciclagem",
            end_title_timeup: "Tempo Esgotado!",
            end_score_text: "Voc√™ reciclou",
            end_score_items: "itens!",
            btn_jogar_novo: "Jogar de Novo",
            btn_voltar_menu: "Voltar ao Menu", 
            item_desc: "Descri√ß√£o",
            item_funfact: "üí° Curiosidade Divertida",
            item_recycling: "‚ôªÔ∏è Por que Reciclar?",
            macaw_bonus: "√ìtimo! +5 segundos de tempo extra!",
            organicos_label: "Org√¢nicos",
            papel_label: "Papel",
            metais_label: "Metais",
            vidros_label: "Vidros",
            plasticos_label: "Pl√°sticos",
            rejeitos_label: "Rejeitos",
            organicos_ex: "ORG√ÇNICOS",
            papel_ex: "PAPEL",
            metais_ex: "METAIS",
            vidros_ex: "VIDROS",
            plasticos_ex: "PL√ÅSTICOS",
            rejeitos_ex: "REJEITOS",

            TRASH_ITEMS: { 
                organicos: [
                    { name: "Caro√ßo de Manga", icon: "assets/caroco_de_manga_padrao.png", icon_hc: "assets/caroco_de_manga_tea.png", icon_cb: "assets/caroco_de_manga_daltonismo.png", description: "√â a semente dura que fica dentro da manga. √â um resto de alimento natural.", funFact: "Em alguns lugares, as pessoas plantam o caro√ßo de manga para nascer uma nova √°rvore cheia de frutas!", recyclingInfo: "Lixo org√¢nico vira adubo, um superalimento para as plantas crescerem fortes e saud√°veis. Isso ajuda a diminuir o lixo nos aterros." },
                    { name: "Casca de Banana", icon: "assets/casca_de_banana_padrao.png", icon_hc: "assets/casca_de_banana_tea.png", icon_cb: "assets/casca_de_banana_daltonismo.png", description: "√â a parte de fora da banana que a gente n√£o come. √â um material org√¢nico.", funFact: "A parte de dentro da casca de banana pode ser usada para deixar sapatos de couro brilhando!", recyclingInfo: "Assim como outros restos de comida, a casca de banana se transforma em adubo na compostagem, enriquecendo a terra para novas plantinhas." },
                    { name: "Folha Seca", icon: "assets/folha_seca_padrao.png", icon_hc: "assets/folha_seca_tea.png", icon_cb: "assets/folha_seca_daltonismo.png", description: "S√£o as folhas que caem das √°rvores no outono. Fazem parte do ciclo da natureza.", funFact: "As folhas secas no ch√£o servem de casinha e comida para muitos bichinhos pequenos, como as minhocas.", recyclingInfo: "Folhas secas s√£o √≥timas para a compostagem! Elas ajudam a criar um adubo rico que devolve nutrientes para o solo, como um presente para a natureza." },
                    { name: "Ma√ß√£ Mordida", icon: "assets/maca_mordida_padrao.png", icon_hc: "assets/maca_mordida_tea.png", icon_cb: "assets/maca_mordida_daltonismo.png", description: "√â o que sobra de uma ma√ß√£ depois de com√™-la. √â um lixo org√¢nico e natural.", funFact: "Passarinhos e outros animais adoram encontrar um resto de ma√ß√£ para beliscar na natureza.", recyclingInfo: "Restos de frutas s√£o perfeitos para virar adubo. Ao inv√©s de ir para o lixo comum, eles podem ajudar a terra a ficar mais f√©rtil." }
                ],
                papel: [
                    { name: "Caixa de Papel√£o", icon: "assets/caixa_de_papelao_padrao.png", icon_hc: "assets/caixa_de_papelao_tea.png", icon_cb: "assets/caixa_de_papelao_daltonismo.png", description: "Feita de papel grosso, √© usada para guardar e transportar coisas, como brinquedos e sapatos.", funFact: "Gatos adoram caixas de papel√£o! Para eles, √© o esconderijo e o brinquedo perfeito.", recyclingInfo: "Reciclar papel√£o economiza muitas √°rvores de serem cortadas. O papel√£o reciclado pode virar novas caixas, papel e at√© miolo de caderno." },
                    { name: "Folha de Caderno", icon: "assets/folha_de_caderno_padrao.png", icon_hc: "assets/folha_de_caderno_tea.png", icon_cb: "assets/folha_de_caderno_daltonismo.png", description: "√â o papel que usamos para desenhar e escrever na escola.", funFact: "O papel foi inventado h√° mais de 2.000 anos na China!", recyclingInfo: "Cada tonelada de papel reciclado salva cerca de 20 √°rvores. Reciclar papel tamb√©m usa muito menos √°gua do que fabricar um novo do zero." },
                    { name: "Papel Amassado", icon: "assets/papel_amassado_padrao.png", icon_hc: "assets/papel_amassado_tea.png", icon_cb: "assets/papel_amassado_daltonismo.png", description: "Um peda√ßo de papel que foi esmagado, geralmente depois de um desenho que n√£o deu certo.", funFact: "Uma folha de papel pode ser reciclada de 5 a 7 vezes antes que suas fibras fiquem curtas demais.", recyclingInfo: "Mesmo amassado, o papel ainda tem muito valor! Ele pode ser transformado em papel novo, caixas de ovos e jornais, ajudando a proteger as florestas." },
                    { name: "Revista", icon: "assets/revista_padrao.png", icon_hc: "assets/revista_tea.png", icon_cb: "assets/revista_daltonismo.png", description: "Um tipo de livro com muitas fotos coloridas e textos, feito de um papel brilhante.", funFact: "As cores brilhantes das revistas v√™m de tintas especiais, mas elas podem ser removidas durante o processo de reciclagem.", recyclingInfo: "Reciclar revistas ajuda a diminuir a quantidade de lixo e a economizar os recursos naturais usados para fazer papel novo." }
                ],
                metais: [
                    { name: "Latinha Amassada", icon: "assets/latinha_amassada_padrao.png", icon_hc: "assets/latinha_amassada_tea.png", icon_cb: "assets/latinha_amassada_daltonismo.png", description: "Geralmente feita de alum√≠nio, √© usada para guardar refrigerantes e sucos.", funFact: "O alum√≠nio pode ser reciclado infinitas vezes sem perder sua qualidade! Uma latinha reciclada pode voltar para a prateleira em apenas 60 dias.", recyclingInfo: "Reciclar uma √∫nica latinha de alum√≠nio economiza energia suficiente para manter uma TV ligada por 3 horas. √â uma das reciclagens mais poderosas que existem!" },
                    { name: "Peda√ßo de Metal", icon: "assets/pedaco_de_metal_padrao.png", icon_hc: "assets/pedaco_de_metal_tea.png", icon_cb: "assets/pedaco_de_metal_daltonismo.png", description: "Pode ser um prego, um parafuso ou qualquer sobra de objetos feitos de ferro ou a√ßo.", funFact: "√çm√£s s√≥ grudam em alguns tipos de metais, como o ferro e o a√ßo, mas n√£o no alum√≠nio das latinhas!", recyclingInfo: "Reciclar metais evita a minera√ß√£o, que pode poluir rios e destruir florestas. O metal reciclado √© usado para fazer carros, bicicletas e at√© pe√ßas de avi√£o." },
                    { name: "Pregos", icon: "assets/pregos_padrao.png", icon_hc: "assets/pregos_tea.png", icon_cb: "assets/pregos_daltonismo.png", description: "Pequenas pe√ßas de metal pontudas usadas para juntar peda√ßos de madeira.", funFact: "Pregos j√° foram feitos √† m√£o, um por um! Hoje, m√°quinas conseguem fazer milhares deles por minuto.", recyclingInfo: "Mesmo pequenos, os pregos de metal s√£o recicl√°veis. Junt√°-los e descart√°-los corretamente ajuda a economizar recursos e energia." },
                    { name: "Tampa de Metal", icon: "assets/tampa_padrao.png", icon_hc: "assets/tampa_tea.png", icon_cb: "assets/tampa_daltonismo.png", description: "S√£o as tampinhas de garrafas de vidro, geralmente feitas de a√ßo.", funFact: "Muitas pessoas colecionam tampinhas de garrafa por suas cores e desenhos diferentes!", recyclingInfo: "As tampinhas de metal s√£o 100% recicl√°veis. Elas s√£o derretidas e o metal √© usado para criar novos objetos, como arames e outras pe√ßas de a√ßo." }
                ],
                vidros: [
                    { name: "Garrafa Quebrada", icon: "assets/garrafa_quebrada_padrao.png", icon_hc: "assets/garrafa_quebrada_tea.png", icon_cb: "assets/garrafa_quebrada_daltonismo.png", description: "Peda√ßos de uma garrafa de vidro que se partiu. √â preciso ter muito cuidado ao manuse√°-la.", funFact: "O vidro √© feito principalmente de areia derretida em temperaturas muito altas!", recyclingInfo: "O vidro pode ser reciclado para sempre! Jogar vidro no lixo √© perigoso para os garis e animais. Reciclando, ele vira novas garrafas e potes sem perder a qualidade." },
                    { name: "Copo de Vidro", icon: "assets/copo_padrao.png", icon_hc: "assets/copo_tea.png", icon_cb: "assets/copo_daltonismo.png", description: "Um copo comum, usado para beber √°gua ou suco, que pode quebrar facilmente.", funFact: "Vidro n√£o tem cheiro nem sabor, por isso as bebidas ficam mais gostosas nele!", recyclingInfo: "Quando um copo quebra, seus cacos devem ser embrulhados em jornal e colocados na lixeira verde. O vidro reciclado economiza mat√©ria-prima e energia." }
                ],
                plasticos: [
                    { name: "Brinquedo Quebrado", icon: "assets/brinquedo_quebrado_padrao.png", icon_hc: "assets/brinquedo_quebrado_tea.png", icon_cb: "assets/brinquedo_quebrado_daltonismo.png", description: "Um brinquedo de pl√°stico que n√£o funciona mais ou que perdeu alguma pe√ßa.", funFact: "Alguns pl√°sticos reciclados de brinquedos podem virar bancos de pra√ßa ou cones de tr√¢nsito!", recyclingInfo: "O pl√°stico demora centenas de anos para sumir na natureza, poluindo rios e oceanos. Reciclar brinquedos (quando poss√≠vel) ajuda a transformar o pl√°stico velho em algo novo." },
                    { name: "Garrafa PET", icon: "assets/garrafa_pet_padrao.png", icon_hc: "assets/garrafa_pet_tea.png", icon_cb: "assets/garrafa_pet_daltonismo.png", description: "√â uma garrafa de pl√°stico transparente, muito usada para guardar refrigerantes e √°gua.", funFact: "Sabia que o pl√°stico de garrafas PET recicladas pode virar tecido para fazer roupas e cobertores?", recyclingInfo: "Quando jogada na natureza, uma garrafa PET pode levar mais de 400 anos para se decompor! Recicl√°-la protege os animais e economiza petr√≥leo." },
                    { name: "Sacola Pl√°stica", icon: "assets/sacola_padrao.png", icon_hc: "assets/sacola_tea.png", icon_cb: "assets/sacola_daltonismo.png", description: "Uma sacola fina de pl√°stico, usada para carregar compras. Ela voa f√°cil com o vento.", funFact: "Uma tartaruga marinha pode confundir uma sacola pl√°stica com uma √°gua-viva, que √© seu alimento, e acabar comendo por engano.", recyclingInfo: "Sacolas pl√°sticas s√£o um grande perigo para os animais, especialmente os marinhos. Recicl√°-las (ou, melhor ainda, evitar us√°-las) salva vidas e limpa o planeta." }
                ],
                rejeitos: [
                    { name: "Fralda", icon: "assets/fralda_padrao.png", icon_hc: "assets/fralda_tea.png", icon_cb: "assets/fralda_daltonismo.png", description: "Fralda descart√°vel usada. Ela n√£o pode ser reciclada por quest√µes de higiene.", funFact: "Uma √∫nica fralda descart√°vel pode levar at√© 450 anos para se decompor na natureza!", recyclingInfo: "Fraldas sujas n√£o s√£o recicl√°veis e devem ir para o lixo comum (rejeito). Elas cont√™m materiais misturados e podem transmitir doen√ßas." },
                    { name: "Papel Higi√™nico", icon: "assets/papel_higienico_padrao.png", icon_hc: "assets/papel_higienico_tea.png", icon_cb: "assets/papel_higienico_daltonismo.png", description: "Papel usado para higiene pessoal. Depois de usado, n√£o pode ser reciclado.", funFact: "Apesar de ser de papel, o papel higi√™nico usado n√£o √© recicl√°vel porque suas fibras s√£o muito curtas e ele est√° contaminado.", recyclingInfo: "Assim como as fraldas, papel higi√™nico usado e outros pap√©is de banheiro (len√ßos, papel toalha) devem ser descartados no lixo comum, pois n√£o podem ser reaproveitados." },
                    { name: "Guardanapo Sujo", icon: "assets/guardanapo_padrao.png", icon_hc: "assets/guardanapo_tea.png", icon_cb: "assets/guardanapo_daltonismo.png", description: "Peda√ßo de papel macio usado para limpar a boca e as m√£os durante as refei√ß√µes. Geralmente est√° sujo de comida, gordura ou l√≠quidos.", funFact: "Mesmo sendo de papel, o guardanapo sujo n√£o pode ir para a reciclagem comum, pois a gordura e a comida contaminam os outros pap√©is.", recyclingInfo: "Eles n√£o s√£o reciclados como papel, mas podem virar adubo. O ideal √© descart√°-los no lixo org√¢nico para compostagem, transformando-os em nutrientes e reduzindo o lixo no aterro." }
                ]
            }
        },
        'en': {
            titulo_pagina: "SafeQuest - Recycling Guardian",
            titulo_principal: "SafeQuest",
            subtitulo_fase: "Stage 2: Recycling Guardian",
            intro_texto: "The river needs your help! Drag each type of trash to the correct bin to clean the environment. Be quick and earn bonus time!",
            btn_comecar: "Start!",
            btn_continuar: "Continue",
            lixos_label: "Trash:",
            etapa_label: "Stage",
            livro_anterior: "‚óÄ Previous Page",
            livro_proximo: "Next Page ‚ñ∂",
            livro_pagina: "Page",
            orientation_titulo: "Turn your device",
            orientation_texto: "For a better experience, this game should be played with the screen horizontally.",
            dialogo_tutorial_titulo: "Welcome, Guardian!",
            dialogo_tutorial_texto: "Hello, Guardian! The river is full of trash and we need your help to clean it. Your mission is to drag each item to the correct colored bin. Remember, every piece of trash in the right place helps save our planet. Let's start this cleanup!",
            stage_1_title: "Stage 1: Starting the Cleanup",
            stage_1_text: "Food scraps go in the brown bin, and papers in the blue. Let's start cleaning!",
            stage_2_title: "Stage 2: Beware of Danger!",
            stage_2_text: "Glass goes in the green bin for safety! And metal cans, always in the yellow.",
            stage_3_title: "Stage 3: The Plastic Enemy",
            stage_3_text: "Plastic pollutes a lot! Always throw it in the red bin to ensure recycling.",
            stage_4_title: "Final Stage: Master Challenge!",
            stage_4_text: "Full attention! Items like batteries and diapers go into the gray rejects bin.",
            macaw_praise_1: "Perfect recycling! You hit the nail on the head.",
            macaw_praise_2: "That's right! Every trash in its proper place.",
            macaw_praise_3: "Great job! The planet thanks you for your help.",
            macaw_praise_4: "Exactly! You know exactly where to discard each item.",
            macaw_hint_1: "Oops! It seems this trash does not belong in this bin. Try again.",
            macaw_hint_2: "Almost! Check the material of this item. The Recycling Guide can help.",
            macaw_hint_3: "That is not the correct bin. Think about the type of material.",
            macaw_hint_4: "A slight mistake! Try dragging to another bin.",
            macaw_perf_1: "You've taken the first steps as a Recycling Guardian! Keep practicing and you'll soon be an expert!",
            macaw_perf_2: "Your progress is remarkable! You are helping a lot to clean the river. Keep it up!",
            macaw_perf_3: "Amazing! You mastered the art of recycling and cleaned everything perfectly. Congratulations!",
            macaw_defeat_1: "Time's up, but don't give up! Recycling requires practice. Try again!",
            macaw_defeat_2: "Not this time, but every item you recycled has already made a difference. Next time, you'll be faster!",
            macaw_defeat_3: "The clock was faster, but your willingness to help is what counts. Let's go for the next try!",
            macaw_other_1: "Keep going! Every bit of recycled trash is a victory.",
            macaw_other_2: "Remember: separating trash is an important act for the environment.",
            macaw_other_3: "The Recycling Guide is there to help if you have any doubts!",
            end_title_win: "Recycling Master",
            end_title_timeup: "Time's Up!",
            end_score_text: "You recycled",
            end_score_items: "items!",
            btn_jogar_novo: "Play Again",
            btn_voltar_menu: "Back to Menu", 
            item_desc: "Description",
            item_funfact: "üí° Fun Fact",
            item_recycling: "‚ôªÔ∏è Why Recycle?",
            macaw_bonus: "Great! +5 seconds of extra time!",
            organicos_label: "Organics",
            papel_label: "Paper",
            metais_label: "Metals",
            vidros_label: "Glass",
            plasticos_label: "Plastics",
            rejeitos_label: "Rejects",
            organicos_ex: "ORGANICS",
            papel_ex: "PAPER",
            metais_ex: "METALS",
            vidros_ex: "GLASS",
            plasticos_ex: "PLASTICS",
            rejeitos_ex: "REJECTS",

            TRASH_ITEMS: { 
                organicos: [
                    { name: "Mango Pit", icon: "assets/caroco_de_manga_padrao.png", icon_hc: "assets/caroco_de_manga_tea.png", icon_cb: "assets/caroco_de_manga_daltonismo.png", description: "It's the hard seed found inside a mango. It's a natural food remnant.", funFact: "In some places, people plant the mango pit to grow a new tree full of fruit!", recyclingInfo: "Organic waste becomes compost, a superfood for plants to grow strong and healthy. This helps reduce waste in landfills." },
                    { name: "Banana Peel", icon: "assets/casca_de_banana_padrao.png", icon_hc: "assets/casca_de_banana_tea.png", icon_cb: "assets/casca_de_banana_daltonismo.png", description: "It's the outer layer of the banana that we don't eat. It is organic material.", funFact: "The inside of a banana peel can be used to make leather shoes shine!", recyclingInfo: "Like other food scraps, the banana peel turns into fertilizer during composting, enriching the soil for new plants." },
                    { name: "Dry Leaf", icon: "assets/folha_seca_padrao.png", icon_hc: "assets/folha_seca_tea.png", icon_cb: "assets/folha_seca_daltonismo.png", description: "These are the leaves that fall from trees in autumn. They are part of nature's cycle.", funFact: "Dry leaves on the ground serve as a home and food for many small creatures, like earthworms.", recyclingInfo: "Dry leaves are great for composting! They help create a rich fertilizer that returns nutrients to the soil, like a gift to nature." },
                    { name: "Bitten Apple", icon: "assets/maca_mordida_padrao.png", icon_hc: "assets/maca_mordida_tea.png", icon_cb: "assets/maca_mordida_daltonismo.png", description: "It's what's left of an apple after you've eaten it. It is organic and natural trash.", funFact: "Birds and other animals love finding an apple core to nibble on in nature.", recyclingInfo: "Fruit scraps are perfect for turning into compost. Instead of going to regular trash, they can help the soil become more fertile." }
                ],
                papel: [
                    { name: "Cardboard Box", icon: "assets/caixa_de_papelao_padrao.png", icon_hc: "assets/caixa_de_papelao_tea.png", icon_cb: "assets/caixa_de_papelao_daltonismo.png", description: "Made of thick paper, it's used to store and transport things, like toys and shoes.", funFact: "Cats love cardboard boxes! For them, it's the perfect hiding spot and toy.", recyclingInfo: "Recycling cardboard saves many trees from being cut down. Recycled cardboard can turn into new boxes, paper, and even notebook centers." },
                    { name: "Notebook Sheet", icon: "assets/folha_de_caderno_padrao.png", icon_hc: "assets/folha_de_caderno_tea.png", icon_cb: "assets/folha_de_caderno_daltonismo.png", description: "It's the paper we use to draw and write in school.", funFact: "Paper was invented over 2,000 years ago in China!", recyclingInfo: "Every ton of recycled paper saves about 20 trees. Recycling paper also uses much less water than manufacturing new paper from scratch." },
                    { name: "Crushed Paper", icon: "assets/papel_amassado_padrao.png", icon_hc: "assets/papel_amassado_tea.png", icon_cb: "assets/papel_amassado_daltonismo.png", description: "A crumpled piece of paper, usually after a drawing that didn't work out.", funFact: "A sheet of paper can be recycled 5 to 7 times before its fibers become too short.", recyclingInfo: "Even crumpled, paper still has a lot of value! It can be transformed into new paper, egg cartons, and newspapers, helping to protect forests." },
                    { name: "Magazine", icon: "assets/revista_padrao.png", icon_hc: "assets/revista_tea.png", icon_cb: "assets/revista_daltonismo.png", description: "A type of book with many colorful photos and texts, made of glossy paper.", funFact: "The bright colors in magazines come from special inks, but they can be removed during the recycling process.", recyclingInfo: "Recycling magazines helps reduce the amount of trash and saves the natural resources used to make new paper." }
                ],
                metais: [
                    { name: "Crushed Can", icon: "assets/latinha_amassada_padrao.png", icon_hc: "assets/latinha_amassada_tea.png", icon_cb: "assets/latinha_amassada_daltonismo.png", description: "Usually made of aluminum, it's used to hold sodas and juices.", funFact: "Aluminum can be recycled infinitely without losing its quality! A recycled can can return to the shelf in just 60 days.", recyclingInfo: "Recycling a single aluminum can saves enough energy to keep a TV running for 3 hours. It is one of the most powerful recycling efforts there is!" },
                    { name: "Piece of Metal", icon: "assets/pedaco_de_metal_padrao.png", icon_hc: "assets/pedaco_de_metal_tea.png", icon_cb: "assets/pedaco_de_metal_daltonismo.png", description: "It can be a nail, a screw, or any scrap from objects made of iron or steel.", funFact: "Magnets only stick to some types of metals, like iron and steel, but not to the aluminum in cans!", recyclingInfo: "Recycling metals prevents mining, which can pollute rivers and destroy forests. Recycled metal is used to make cars, bicycles, and even airplane parts." },
                    { name: "Nails", icon: "assets/pregos_padrao.png", icon_hc: "assets/pregos_tea.png", icon_cb: "assets/pregos_daltonismo.png", description: "Small pointed pieces of metal used to join pieces of wood.", funFact: "Nails used to be made by hand, one by one! Today, machines can make thousands of them per minute.", recyclingInfo: "Even small, metal nails are recyclable. Collecting them and disposing of them correctly helps save resources and energy." },
                    { name: "Metal Cap", icon: "assets/tampa_padrao.png", icon_hc: "assets/tampa_tea.png", icon_cb: "assets/tampa_daltonismo.png", description: "These are the caps from glass bottles, usually made of steel.", funFact: "Many people collect bottle caps because of their different colors and designs!", recyclingInfo: "Metal caps are 100% recyclable. They are melted down and the metal is used to create new objects, such as wire and other steel parts." }
                ],
                vidros: [
                    { name: "Broken Bottle", icon: "assets/garrafa_quebrada_padrao.png", icon_hc: "assets/garrafa_quebrada_tea.png", icon_cb: "assets/garrafa_quebrada_daltonismo.png", description: "Pieces of a glass bottle that broke. You need to be very careful when handling it.", funFact: "Glass is mainly made from sand melted at very high temperatures!", recyclingInfo: "Glass can be recycled forever! Throwing glass in the trash is dangerous for sanitation workers and animals. Recycling it turns it into new bottles and jars without losing quality." },
                    { name: "Glass Cup", icon: "assets/copo_padrao.png", icon_hc: "assets/copo_tea.png", icon_cb: "assets/copo_daltonismo.png", description: "A common cup, used for drinking water or juice, that can break easily.", funFact: "Glass has no smell or taste, which is why drinks taste better in it!", recyclingInfo: "When a cup breaks, its shards should be wrapped in newspaper and placed in the green bin. Recycled glass saves raw materials and energy." }
                ],
                plasticos: [
                    { name: "Broken Toy", icon: "assets/brinquedo_quebrado_padrao.png", icon_hc: "assets/brinquedo_quebrado_tea.png", icon_cb: "assets/brinquedo_quebrado_daltonismo.png", description: "A plastic toy that no longer works or is missing a piece.", funFact: "Some recycled plastic from toys can turn into park benches or traffic cones!", recyclingInfo: "Plastic takes hundreds of years to disappear in nature, polluting rivers and oceans. Recycling toys (when possible) helps turn old plastic into something new." },
                    { name: "PET Bottle", icon: "assets/garrafa_pet_padrao.png", icon_hc: "assets/garrafa_pet_tea.png", icon_cb: "assets/garrafa_pet_daltonismo.png", description: "It is a transparent plastic bottle, widely used to store sodas and water.", funFact: "Did you know that recycled PET bottle plastic can turn into fabric for making clothes and blankets?", recyclingInfo: "When thrown into nature, a PET bottle can take more than 400 years to decompose! Recycling it protects animals and saves petroleum." },
                    { name: "Plastic Bag", icon: "assets/sacola_padrao.png", icon_hc: "assets/sacola_tea.png", icon_cb: "assets/sacola_daltonismo.png", description: "A thin plastic bag, used for carrying groceries. It flies easily in the wind.", funFact: "A sea turtle can mistake a plastic bag for a jellyfish, which is its food, and end up eating it by mistake.", recyclingInfo: "Plastic bags are a major danger to animals, especially marine animals. Recycling them (or, better yet, avoiding their use) saves lives and cleans the planet." }
                ],
                rejeitos: [
                    { name: "Diaper", icon: "assets/fralda_padrao.png", icon_hc: "assets/fralda_tea.png", icon_cb: "assets/fralda_daltonismo.png", description: "Used disposable diaper. It cannot be recycled due to hygiene issues.", funFact: "A single disposable diaper can take up to 450 years to decompose in nature!", recyclingInfo: "Dirty diapers are not recyclable and should go into general waste (rejects). They contain mixed materials and can transmit diseases." },
                    { name: "Toilet Paper", icon: "assets/papel_higienico_padrao.png", icon_hc: "assets/papel_higienico_tea.png", icon_cb: "assets/papel_higienico_daltonismo.png", Description: "Paper used for personal hygiene. After use, it cannot be recycled.", FunFact: "Even though it's paper, used toilet paper isn't recyclable because its fibers are too short and it is contaminated.", RecyclingInfo: "Like diapers, used toilet paper and other bathroom papers (tissues, paper towels) must be discarded in the general waste, as they cannot be reused." },
                    { name: "Dirty Napkin", icon: "assets/guardanapo_padrao.png", icon_hc: "assets/guardanapo_tea.png", icon_cb: "assets/guardanapo_daltonismo.png", description: "A piece of soft paper used to clean the mouth and hands during meals. It is usually dirty from food, grease, or liquids.", funFact: "Even though it's paper, a dirty napkin can't go into regular recycling (blue bin) because the grease and food contaminate the other clean papers.", recyclingInfo: "They aren't recycled like paper, but they can be composted. Ideally, they should be discarded in the organic waste bin, turning them into nutrients and reducing landfill waste." }
                ]
            }
        },
        'es': {
            titulo_pagina: "SafeQuest - Guardi√°n del Reciclaje",
            titulo_principal: "SafeQuest",
            subtitulo_fase: "Fase 2: Guardi√°n del Reciclaje",
            intro_texto: "¬°El r√≠o necesita tu ajuda! Arrastra cada tipo de basura al contenedor correcto para limpiar el medio ambiente. ¬°S√© r√°pido y gana tiempo extra!",
            btn_comecar: "¬°Empezar!",
            btn_continuar: "Continuar",
            lixos_label: "Basura:",
            etapa_label: "Etapa",
            livro_anterior: "‚óÄ P√°gina Anterior",
            livro_proximo: "P√°gina Siguiente ‚ñ∂",
            livro_pagina: "P√°gina",
            orientation_titulo: "Gira tu dispositivo",
            orientation_texto: "Para una mejor experiencia, este juego debe jugarse con la pantalla en horizontal.",
            dialogo_tutorial_titulo: "¬°Bienvenido, Guardi√°n!",
            dialogo_tutorial_texto: "¬°Hola, Guardi√°n! El r√≠o est√° lleno de basura y necesitamos tu ajuda para limpiarlo. Tu misi√≥n es arrastrar cada art√≠culo al contenedor del color correcto. Recuerda, cada basura en su lugar ajuda a salvar nuestro planeta. ¬øEmpezamos esta limpieza?",
            stage_1_title: "Etapa 1: Empezando la Limpieza",
            stage_1_text: "Los restos de comida van en el contenedor marr√≥n, y los papeles en el azul. ¬°Empecemos a limpiar!",
            stage_2_title: "Etapa 2: ¬°Cuidado con el Peligro!",
            stage_2_text: "Los vidrios van en el verde por tu seguridad! Y las latas de metal, siempre en el amarillo.",
            stage_3_title: "Etapa 3: El Enemigo Pl√°stico",
            stage_3_text: "¬°El pl√°stico contamina mucho! T√≠ralo siempre en el rojo para asegurar el reciclaje.",
            stage_4_title: "Etapa Final: ¬°Desaf√≠o Maestro!",
            stage_4_text: "¬°Atenci√≥n total! Art√≠culos como pilas y pa√±ales van al contenedor gris de rechazos.",
            macaw_praise_1: "¬°Reciclagem perfeito! Acertaste de lleno.",
            macaw_praise_2: "¬°As√≠ es! Cada basura en su debido lugar.",
            macaw_praise_3: "¬°Excelente trabajo! El planeta agradece tu ajuda.",
            macaw_praise_4: "¬°Exacto! Sabes exactamente d√≥nde desechar cada art√≠culo.",
            macaw_hint_1: "¬°Uy! Parece que esta basura no pertenece a este contenedor. Int√©ntalo de nuevo.",
            macaw_hint_2: "¬°Casi! Verifica el material de este art√≠culo. La Gu√≠a de Reciclaje puede ajudar.",
            macaw_hint_3: "Ese no es el contenedor correcto. Piensa en el tipo de material.",
            macaw_hint_4: "¬°Un pequeno error! Intenta arrastrar a otro contenedor.",
            macaw_perf_1: "¬°Distaste los primeiros passos como Guardi√°n del Reciclaje! ¬°Sigue praticando y pronto ser√°s un experto!",
            macaw_perf_2: "¬°Tu progresso √© not√°vel! Est√°s ajudando muito a limpiar el r√≠o. ¬°Sigue as√≠!",
            macaw_perf_3: "¬°Incre√≠ble! Dominaste el arte del reciclaje y limpiaste todo a la perfecci√≥n. ¬°Felicidades!",
            macaw_defeat_1: "Se acab√≥ el tiempo, ¬°pero no te desanimes! El reciclaje requiere pr√°ctica. ¬°Int√©ntalo de nuevo!",
            macaw_defeat_2: "No fue esta vez, pero cada art√≠culo que reciclaste ya marc√≥ la diferencia. ¬°La pr√≥xima vez, ser√°s m√°s r√°pido!",
            macaw_defeat_3: "El reloj fue m√°s r√°pido, pero tu voluntad de ajudar es lo que cuenta. ¬°Vamos por el siguiente intento!",
            macaw_other_1: "¬°Sigue as√≠! Cada trozo de basura reciclada es una victoria.",
            macaw_other_2: "Recuerda: separar la basura es um acto importante para el medio ambiente.",
            macaw_other_3: "¬°La Gu√≠a de Reciclaje est√° ah√≠ para ayudarte si tienes alguna duda!",
            end_title_win: "Maestro del Reciclaje",
            end_title_timeup: "¬°Tiempo Agotado!",
            end_score_text: "Reciclaste",
            end_score_items: "art√≠culos!",
            btn_jogar_novo: "Jugar de Nuevo",
            btn_voltar_menu: "Volver al Men√∫", 
            item_desc: "Descripci√≥n",
            item_funfact: "üí° Curiosidad Divertida",
            item_recycling: "‚ôªÔ∏è ¬øPor qu√© Reciclar?",
            macaw_bonus: "¬°Genial! +5 segundos de tiempo extra!",
            organicos_label: "Org√°nicos",
            papel_label: "Papel",
            metais_label: "Metales",
            vidros_label: "Vidrios",
            plasticos_label: "Pl√°sticos",
            rejeitos_label: "Rechazos",
            organicos_ex: "ORG√ÅNICOS",
            papel_ex: "PAPEL",
            metais_ex: "METALES",
            vidros_ex: "VIDRIOS",
            plasticos_ex: "PL√ÅSTICOS",
            rejeitos_ex: "RECHAZOS",

            TRASH_ITEMS: { 
                organicos: [
                    { name: "Hueso de Mango", icon: "assets/caroco_de_manga_padrao.png", icon_hc: "assets/caroco_de_manga_tea.png", icon_cb: "assets/caroco_de_manga_daltonismo.png", description: "Es la semilla dura que se encuentra dentro de un mango. Es un resto de alimento natural.", funFact: "¬°En algunos lugares, la gente planta el hueso de mango para que crezca un nuevo √°rbol lleno de frutas!", recyclingInfo: "La basura org√°nica se convierte en abono, um s√∫per alimento para que las plantas crezcan fuertes y sanas. Esto ajuda a reducir la basura en los vertederos." },
                    { name: "C√°scara de Pl√°tano", icon: "assets/casca_de_banana_padrao.png", icon_hc: "assets/casca_de_banana_tea.png", icon_cb: "assets/casca_de_banana_daltonismo.png", description: "Es la capa exterior del pl√°tano que no comemos. Es material org√°nico.", funFact: "¬°La parte interior de la c√°scara de pl√°tano puede usarse para abrillantar zapatos de cuero!", recyclingInfo: "Al igual que otros restos de comida, la c√°scara de pl√°tano se transforma en abono durante el compostaje, enriqueciendo la tierra para nuevas plantas." },
                    { name: "Hoja Seca", icon: "assets/folha_seca_padrao.png", icon_hc: "assets/folha_seca_tea.png", icon_cb: "assets/folha_seca_daltonismo.png", description: "Son las hojas que caen de los √°rboles en oto√±o. Forman parte del ciclo de la naturaleza.", funFact: "Las hojas secas en el suelo sirven de hogar y comida para muchas criaturas peque√±as, como las lombrices.", recyclingInfo: "¬°Las hojas secas son excelentes para el compostaje! Ayudan a crear un abono rico que devuelve nutrientes al suelo, como um regalo para la naturaleza." },
                    { name: "Manzana Mordida", icon: "assets/maca_mordida_padrao.png", icon_hc: "assets/maca_mordida_tea.png", icon_cb: "assets/maca_mordida_daltonismo.png", description: "Es lo que queda de una manzana despu√©s de comerla. Es basura org√°nica y natural.", funFact: "A los p√°jaros y otros animales les encanta encontrar un resto de manzana para picar en la naturaleza.", recyclingInfo: "Los restos de fruta son perfectos para convertirse en abono. En lugar de ir a la basura com√∫n, pueden ajudar a que la tierra sea m√°s f√©rtil." }
                ],
                papel: [
                    { name: "Caja de Cart√≥n", icon: "assets/caixa_de_papelao_padrao.png", icon_hc: "assets/caixa_de_papelao_tea.png", icon_cb: "assets/caixa_de_papelao_daltonismo.png", description: "Hecha de papel grueso, se usa para guardar e transportar coisas, como brinquedos e sapatos.", funFact: "¬°A los gatos les encantan las cajas de cart√≥n! Para ellos, es el escondite y juguete perfecto.", recyclingInfo: "Reciclar cart√≥n salva muchos √°rboles de ser talados. El cart√≥n reciclado puede convertirse en cajas nuevas, papel e incluso el centro de cuadernos." },
                    { name: "Hoja de Cuaderno", icon: "assets/folha_de_caderno_padrao.png", icon_hc: "assets/folha_de_caderno_tea.png", icon_cb: "assets/folha_de_caderno_daltonismo.png", description: "Es el papel que usamos para dibujar y escribir en la escuela.", funFact: "¬°El papel fue inventado hace m√°s de 2.000 a√±os en China!", recyclingInfo: "Cada tonelada de papel reciclado salva alrededor de 20 √°rboles. Reciclar papel tambi√©n usa mucha menos agua que fabricar papel nuevo desde cero." },
                    { name: "Papel Arrugado", icon: "assets/papel_amassado_padrao.png", icon_hc: "assets/papel_amassado_tea.png", icon_cb: "assets/papel_amassado_daltonismo.png", description: "Un trozo de papel arrugado, geralmente despu√©s de un dibujo que no funcion√≥.", funFact: "Una hoja de papel puede reciclarse de 5 a 7 veces antes de que sus fibras se vuelvan demasiado cortas.", recyclingInfo: "Incluso arrugado, ¬°el papel todav√≠a tiene mucho valor! Puede transformarse en papel nuevo, cajas de huevos y peri√≥dicos, ajudando a proteger los bosques." },
                    { name: "Revista", icon: "assets/revista_padrao.png", icon_hc: "assets/revista_tea.png", icon_cb: "assets/revista_daltonismo.png", description: "Un tipo de libro con muchas fotos y textos coloridos, hecho de papel brillante.", funFact: "Los colores brillantes de las revistas provienen de tintas especiales, pero se pueden quitar durante el proceso de reciclaje.", recyclingInfo: "Reciclar revistas ajuda a disminuir la cantidad de basura y a ahorrar los recursos naturales utilizados para hacer papel nuevo." }
                ],
                metais: [
                    { name: "Lata Aplastada", icon: "assets/latinha_amassada_padrao.png", icon_hc: "assets/latinha_amassada_tea.png", icon_cb: "assets/latinha_amassada_daltonismo.png", description: "Generalmente hecha de aluminio, se usa para guardar refrescos y jugos.", funFact: "¬°El aluminio puede reciclarse infinitas veces sin perder sua qualidade! Una lata reciclada puede volver a la estanter√≠a en solo 60 d√≠as.", recyclingInfo: "Reciclar una sola lata de aluminio ahorra energ√≠a suficiente para mantener un televisor encendido durante 3 horas. ¬°Es uno de los esfuerzos de reciclaje m√°s potentes que existen!" },
                    { name: "Trozo de Metal", icon: "assets/pedaco_de_metal_padrao.png", icon_hc: "assets/pedaco_de_metal_tea.png", icon_cb: "assets/pedaco_de_metal_daltonismo.png", description: "Puede ser un clavo, un tornillo o cualquier desecho de objetos hechos de hierro o acero.", funFact: "¬°Los imanes solo se pegan a algunos tipos de metales, como el hierro y el acero, pero no al aluminio de las latas!", recyclingInfo: "Reciclar metales previene la miner√≠a, que puede contaminar r√≠os y destruir bosques. El metal reciclado se utiliza para fabricar coches, bicicletas e incluso piezas de avi√≥n." },
                    { name: "Clavos", icon: "assets/pregos_padrao.png", icon_hc: "assets/pregos_tea.png", icon_cb: "assets/pregos_daltonismo.png", description: "Peque√±as piezas de metal puntiagudas utilizadas para unir trozos de madera.", funFact: "¬°Los clavos sol√≠an hacerse a mano, uno por um! Hoy, las m√°quinas pueden hacer miles de ellos por minuto.", recyclingInfo: "Incluso peque√±os, los clavos de metal son reciclables. Recogerlos y desecharlos correctamente ajuda a ahorrar recursos y energ√≠a." },
                    { name: "Tapa de Metal", icon: "assets/tampa_padrao.png", icon_hc: "assets/tampa_tea.png", icon_cb: "assets/tampa_daltonismo.png", description: "Son las tapas de botellas de vidrio, generalmente hechas de acero.", funFact: "Mucha gente colecciona tapas de botella por sus diferentes colores y dise√±os!", recyclingInfo: "Las tapas de metal son 100% reciclables. Se funden y el metal se utiliza para crear nuevos objetos, como alambres y otras piezas de acero." }
                ],
                vidros: [
                    { name: "Botella Rota", icon: "assets/garrafa_quebrada_padrao.png", icon_hc: "assets/garrafa_quebrada_tea.png", icon_cb: "assets/garrafa_quebrada_daltonismo.png", description: "Trozos de una botella de vidrio que se rompi√≥. Es necesario tener mucho cuidado al manipularla.", funFact: "¬°El vidrio se hace principalmente con arena derretida a temperaturas muy altas!", recyclingInfo: "¬°El vidrio se puede reciclar para siempre! Tirar vidrio a la basura es peligroso para los recolectores de basura y los animales. Al reciclarlo, se convierte en nuevas botellas y frascos sin perder calidad." },
                    { name: "Vaso de Vidrio", icon: "assets/copo_padrao.png", icon_hc: "assets/copo_tea.png", icon_cb: "assets/copo_daltonismo.png", description: "Un vaso com√∫n, utilizado para beber agua o jugo, que puede romperse f√°cilmente.", funFact: "El vidrio no tiene olor ni sabor, ¬°por eso las bebidas saben mejor en √©l!", recyclingInfo: "Cuando un vaso se rompe, sus trozos deben envolverse en papel de peri√≥dico y colocarse en el contenedor verde. El vidrio reciclado ahorra materia prima y energ√≠a." }
                ],
                plasticos: [
                    { name: "Juguete Roto", icon: "assets/brinquedo_quebrado_padrao.png", icon_hc: "assets/brinquedo_quebrado_tea.png", icon_cb: "assets/brinquedo_quebrado_daltonismo.png", description: "Un juguete de pl√°stico que ya no funciona o al que le falta una pieza.", funFact: "¬°Algunos pl√°sticos reciclados de juguetes pueden convertirse en bancos de parque o conos de tr√°fico!", recyclingInfo: "El pl√°stico tarda cientos de a√±os en desaparecer en la naturaleza, contaminando r√≠os y oc√©anos. Reciclar juguetes (cuando sea posible) ajuda a convertir el pl√°stico viejo en algo nuevo." },
                    { name: "Botella PET", icon: "assets/garrafa_pet_padrao.png", icon_hc: "assets/garrafa_pet_tea.png", icon_cb: "assets/garrafa_pet_daltonismo.png", description: "Es una botella de pl√°stico transparente, muy utilizada para almacenar refrescos y agua.", funFact: "¬øSab√≠as que el pl√°stico de botellas PET recicladas puede convertirse en tela para hacer ropa y mantas?", recyclingInfo: "Cuando se tira a la naturaleza, una botella PET puede tardar m√°s de 400 a√±os en descomponerse. Reciclarla protege a los animales y ahorra petr√≥leo." },
                    { name: "Bolsa de Pl√°stico", icon: "assets/sacola_padrao.png", icon_hc: "assets/sacola_tea.png", icon_cb: "assets/sacola_daltonismo.png", description: "A thin plastic bag, used for carrying groceries. It flies easily in the wind.", funFact: "A sea turtle can mistake a plastic bag for a jellyfish, which is its food, and end up eating it by mistake.", recyclingInfo: "Plastic bags are a major danger to animals, especially marine animals. Recycling them (or, better yet, avoiding their use) saves lives and cleans the planet." }
                ],
                rejeitos: [
                    { name: "Pa√±al", icon: "assets/fralda_padrao.png", icon_hc: "assets/fralda_tea.png", icon_cb: "assets/fralda_daltonismo.png", Description: "Pa√±al desechable usado. No se puede reciclar por motivos de higiene.", FunFact: "¬°Un solo pa√±al desechable puede tardar hasta 450 a√±os en descomponerse en la naturaleza!", RecyclingInfo: "Los pa√±ales sucios no son reciclables y deben ir a la basura com√∫n (residuos). Contienen materiales mixtos y pueden transmitir enfermedades." },
                    { name: "Papel Higi√©nico", icon: "assets/papel_higienico_padrao.png", icon_hc: "assets/papel_higienico_tea.png", icon_cb: "assets/papel_higienico_daltonismo.png", description: "Papel usado para higiene pessoal. Despu√©s de usarlo, no se puede reciclar.", funFact: "A pesar de ser papel, el papel higi√©nico usado no es reciclable porque sus fibras son muy cortas y est√° contaminado.", recyclingInfo: "Just like diapers, used toilet paper and other bathroom papers (tissues, paper towels) must be disposed of in general waste, as they cannot be reused." },
                    { name: "Servilleta Sucia", icon: "assets/guardanapo_padrao.png", icon_hc: "assets/guardanapo_tea.png", icon_cb: "assets/guardanapo_daltonismo.png", description: "Un pedazo de papel suave usado para limpiar la boca y las manos durante las comidas. Generalmente est√° sucio con comida, grasa o l√≠quidos.", funFact: "Aunque es de papel, la servilleta sucia no puede ir al reciclaje com√∫n, ya que la grasa y la comida contaminan los otros papeles limpios.", recyclingInfo: "No se reciclan como papel, pero pueden convertirse en compost (abono). Lo ideal es desecharlas en el contenedor org√°nico para compostaje, transform√°ndolas en nutrientes y reduciendo residuos en el vertedero." }
                ]
            }
        }
    };
    
    // --- IN√çCIO: GERENCIADOR DE ACESSIBILIDADE ---
    
    const spritePalettes = {
        // Padr√£o (default)
        'default': {
            background: 'assets/cenario_fase2.png', // Fundo padr√£o (do seu CSS)
            macaw_falando: 'assets/arara_falando_padrao.png',
            macaw_feliz: 'assets/arara_feliz_padrao.png',
            macaw_triste: 'assets/arara_triste_padrao.png',
            macaw_curiosa: 'assets/arara_curiosa_padrao.png',
            book_closed: 'assets/livro_fechado_fase2_padrao.png',
            book_open: 'assets/livro_aberto.png' 
        },
        // Alto Contraste (Mapeado para TEA)
        'high-contrast': {
            background: 'assets/cenario_fase2_tea.png',
            book_closed: 'assets/livro_fechado_fase2_tea.png',
            book_open: 'assets/livro_aberto_tea.png' 
        },
        // Daltonismo
        'colorblind-safe': {
            background: 'assets/cenario_fase2_daltonismo.png',
            book_closed: 'assets/livro_fechado_fase2_daltonismo.png',
            book_open: 'assets/livro_aberto_daltonismo.png' 
        }
    };
    
    const AccessibilityManager = {
        currentPaletteName: 'default',
        currentPalette: spritePalettes['default'],
    
        setPalette: function(paletteName) {
            if (!spritePalettes[paletteName]) {
                console.warn(`Paleta de sprites "${paletteName}" n√£o encontrada. Usando padr√£o.`);
                paletteName = 'default';
            }
            this.currentPaletteName = paletteName;
            this.currentPalette = spritePalettes[paletteName];
            console.log(`Modo de cor de sprites definido para: ${paletteName}`);
        },
    
        getUISprite: function(spriteKey) {
            // Se o sprite n√£o existir (ex: arara no modo TEA), usa o padr√£o
            return this.currentPalette[spriteKey] || spritePalettes['default'][spriteKey];
        },

        updateUISprites: function() {
            if (stageMacawSprite && stageMacawSprite.dataset.spriteKey) {
                stageMacawSprite.src = this.getUISprite(stageMacawSprite.dataset.spriteKey);
            }
            if (endMacawSprite && endMacawSprite.dataset.spriteKey) {
                endMacawSprite.src = this.getUISprite(endMacawSprite.dataset.spriteKey);
            }
            if (macawSprite && macawSprite.dataset.spriteKey) {
                macawSprite.src = this.getUISprite(macawSprite.dataset.spriteKey);
            }
            
            const bookSprite = document.querySelector('[data-sprite-key="book_closed"]');
            if (bookSprite) {
                bookSprite.src = this.getUISprite('book_closed');
            }
            
            const gameContainer = document.getElementById('game-container');
            if (gameContainer) {
                const newBgImage = this.getUISprite('background');
                gameContainer.style.backgroundImage = `linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.3)), url('${newBgImage}')`;
            }

            const bookContainer = document.querySelector('#book-modal .book-container');
            if (bookContainer) {
                bookContainer.style.backgroundImage = `url('${this.getUISprite('book_open')}')`;
            }
        }
    };
    
    // --- FIM: GERENCIADOR DE ACESSIBILIDADE ---


    // --- SELE√á√ÉO DOS ELEMENTOS DA UI (MANTIDO) ---
    const startScreen = document.getElementById('start-screen');
    const stageTransitionScreen = document.getElementById('stage-transition-screen');
    const endScreen = document.getElementById('end-screen');
    const startButton = document.getElementById('start-button');
    const nextStageButton = document.getElementById('next-stage-button');
    const finalActionButton = document.getElementById('final-action-button'); 
    const backToMenuButton = document.getElementById('back-to-menu-button'); 
    
    const stageScoreEl = document.getElementById('stage-score');
    
    const stageLabelEl = document.getElementById('stage-label');
    const timerEl = document.getElementById('timer');
    const trashSpawnArea = document.getElementById('trash-spawn-area');
    const bins = document.querySelectorAll('.bin');
    const macawMessage = document.getElementById('macaw-message');
    const macawText = document.getElementById('macaw-text');
    const gameHeader = document.querySelector('header');
    const gameMain = document.querySelector('main');
    const macawSprite = document.getElementById('macaw-sprite');
    const endMacawSprite = document.getElementById('end-macaw-sprite');
    const stageMacawSprite = document.getElementById('stage-macaw-sprite');

    // Elementos do Guia/Livro e Modal
    const bookButton = document.getElementById('book-button');
    const bookModal = document.getElementById('book-modal');
    const bookModalClose = document.getElementById('book-modal-close');
    const bookPagesContainer = document.getElementById('book-pages-container');
    const pageSections = document.querySelectorAll('.page .section');
    const prevPageBtn = document.getElementById('prev-page-btn');
    const nextPageBtn = document.getElementById('next-page-btn');
    const pageIndicator = document.getElementById('page-indicator'); 
    const itemDetailModal = document.getElementById('item-detail-modal');
    const itemDetailClose = document.getElementById('item-detail-close');
    const itemDetailName = document.getElementById('item-detail-name');
    const itemDetailImg = document.getElementById('item-detail-img');
    const itemDetailDesc = document.getElementById('item-detail-desc');
    const itemDetailFunFact = document.getElementById('item-detail-funfact');
    const itemDetailRecycling = document.getElementById('item-detail-recycling');

    // --- DI√ÅLOGOS (MANTIDO) ---
    
    const dialogues = {
        tutorial: "", 
        stages: { stage1: "", stage2: "", stage3: "", stage4: "" },
        praise: [], hints: [], performance: [], defeat: [], other: []
    };

    const INITIAL_TIME = 90;
    const TIME_BONUS = 5;
    
    function getTranslatedTrashItems() {
        const langData = fase2LangData[settings.language];
        return langData ? langData.TRASH_ITEMS : fase2LangData['pt'].TRASH_ITEMS; 
    }

    const TRASH_GROUP_NAMES = { organicos: '', papel: '', metais: '', vidros: '', plasticos: '', rejeitos: '' };
    
    const STAGES = [
        { stage: 1, goal: 10, categories: ["organicos", "papel"], title: "" }, 
        { stage: 2, goal: 15, categories: ["organicos", "papel", "vidros", "metais"], title: "" },
        { stage: 3, goal: 20, categories: ["organicos", "papel", "vidros", "metais", "plasticos"], title: "" },
        { stage: 4, goal: 30, categories: ["organicos", "papel", "vidros", "metais", "plasticos", "rejeitos"], title: "" }
    ];

    const introDialogues = [
        { title: "", text: "" },
        { title: "", text: "" }
    ];
    
    const getRandomDialogue = (type) => {
        const options = dialogues[type];
        return options[Math.floor(Math.random() * options.length)];
    };

    let timer, totalScore, currentStageIndex, stageScore, timerInterval, macawTimeout, otherDialogueTimeout;
    let isPaused = false;
    let isShowingIntro = 0;
    let introStep = 0;

    // --- IN√çCIO: VARI√ÅVEIS GLOBAIS PARA CONTROLES DE TOQUE (ADI√á√ÉO) ---
    let activeTrashEl = null;     // O item de lixo que est√° sendo arrastado
    let initialTouchX, initialTouchY;   // Posi√ß√£o inicial do toque dentro do lixo
    let originalTrashLeft, originalTrashTop, originalTrashTransform; // Estilos originais para resetar
    let currentDroppable = null;  // A lixeira que est√° sob o lixo (bin.drag-over)
    // --- FIM: VARI√ÅVEIS GLOBAIS PARA CONTROLES DE TOQUE ---
    
    let allBookItems = [];
    let bookPages = []; 
    let currentPage = 1;
    
    const ITEMS_PER_ROW = 3; 
    const SECTIONS_PER_PAGE_SIDE = 3; 
    const SECTIONS_PER_SPREAD = 6; 
    const ITEMS_PER_SPREAD = ITEMS_PER_ROW * SECTIONS_PER_SPREAD; 
    
    let sounds = {};
    let audioInitialized = false; 
    let settings = { music: true, sfx: true, language: 'pt', colorMode: 'default' }; 
    let macawBonusMessage = "√ìtimo! +5 segundos de tempo extra!"; 


    // --- FUN√á√ïES DE ACESSIBILIDADE E LOCALIZA√á√ÉO ---
    function getIconPathByColorMode(item) {
        switch (settings.colorMode) {
            case 'high-contrast':
                return item.icon_hc || item.icon; 
            case 'colorblind-safe':
                return item.icon_cb || item.icon; 
            default:
                return item.icon; 
        }
    }

    function loadSettings() {
        const savedSettings = JSON.parse(localStorage.getItem('safequest-settings'));
        if (savedSettings) {
            settings = { ...settings, ...savedSettings };
        }
        
        const gameContainer = document.getElementById('game-container');
        if (gameContainer) {
            gameContainer.dataset.colorMode = settings.colorMode;
        }

        AccessibilityManager.setPalette(settings.colorMode); 
        updateTexts(); 
        AccessibilityManager.updateUISprites();
    }
    
    function updateTexts() {
        const currentLang = settings.language;
        const texts = fase2LangData[currentLang];
        if (!texts) return;

        document.title = texts.titulo_pagina;
        
        document.querySelectorAll('[data-key]').forEach(element => {
            const key = element.getAttribute('data-key');
            if (texts[key]) {
                element.textContent = texts[key];
            }
        });
        
        dialogues.tutorial = texts.dialogo_tutorial_texto;
        dialogues.stages.stage1 = texts.stage_1_text;
        dialogues.stages.stage2 = texts.stage_2_text;
        dialogues.stages.stage3 = texts.stage_3_text;
        dialogues.stages.stage4 = texts.stage_4_text;
        dialogues.praise = [ texts.macaw_praise_1, texts.macaw_praise_2, texts.macaw_praise_3, texts.macaw_praise_4 ];
        dialogues.hints = [ texts.macaw_hint_1, texts.macaw_hint_2, texts.macaw_hint_3, texts.macaw_hint_4 ];
        dialogues.performance = [ texts.macaw_perf_1, texts.macaw_perf_2, texts.macaw_perf_3 ];
        dialogues.defeat = [ texts.macaw_defeat_1, texts.macaw_defeat_2, texts.macaw_defeat_3 ];
        dialogues.other = [ texts.macaw_other_1, texts.macaw_other_2, texts.macaw_other_3 ];
        
        STAGES[0].title = texts.stage_1_title;
        STAGES[1].title = texts.stage_2_title;
        STAGES[2].title = texts.stage_3_title;
        STAGES[3].title = texts.stage_4_title;
        
        introDialogues[0].title = texts.dialogo_tutorial_titulo;
        introDialogues[0].text = texts.dialogo_tutorial_texto;
        introDialogues[1].title = texts.stage_1_title;
        introDialogues[1].text = texts.stage_1_text;
        
        macawBonusMessage = texts.macaw_bonus; 

        TRASH_GROUP_NAMES.organicos = texts.organicos_label;
        TRASH_GROUP_NAMES.papel = texts.papel_label;
        TRASH_GROUP_NAMES.metais = texts.metais_label;
        TRASH_GROUP_NAMES.vidros = texts.vidros_label;
        TRASH_GROUP_NAMES.plasticos = texts.plasticos_label;
        TRASH_GROUP_NAMES.rejeitos = texts.rejeitos_label;
        
        document.querySelector('.bin[data-category="organicos"]').textContent = texts.organicos_label;
        document.querySelector('.bin[data-category="papel"]').textContent = texts.papel_label;
        document.querySelector('.bin[data-category="metais"]').textContent = texts.metais_label;
        document.querySelector('.bin[data-category="vidros"]').textContent = texts.vidros_label;
        document.querySelector('.bin[data-category="plasticos"]').textContent = texts.plasticos_label;
        document.querySelector('.bin[data-category="rejeitos"]').textContent = texts.rejeitos_label;
        
        document.querySelector('.bin-item-wrapper:nth-child(1) .item-label').textContent = texts.organicos_ex;
        document.querySelector('.bin-item-wrapper:nth-child(2) .item-label').textContent = texts.papel_ex;
        document.querySelector('.bin-item-wrapper:nth-child(3) .item-label').textContent = texts.metais_ex;
        document.querySelector('.bin-item-wrapper:nth-child(4) .item-label').textContent = texts.vidros_ex;
        document.querySelector('.bin-item-wrapper:nth-child(5) .item-label').textContent = texts.plasticos_ex;
        document.querySelector('.bin-item-wrapper:nth-child(6) .item-label').textContent = texts.rejeitos_ex;
    }


    function initAudio() {
        if (audioInitialized) return;
        const soundFiles = {
            'acerto': 'assets/acerto.mp3',
            'alerta-cronometro': 'assets/alerta_do_cronometro.mp3',
            'avaliacao-final': 'assets/avaliacao-final.mp3',
            'bonus-tempo': 'assets/bonus_tempo.mp3',
            'clique-ui': 'assets/clique_ui.mp3',
            'erro': 'assets/erro.mp3',
            'musica-fundo': 'assets/musica_de_fundo_fase2.mp3',
            'pegar-soltar': 'assets/pegar_e_soltar_item.mp3',
            'fim-fase': 'assets/musica_alegre_de_final_de_tela.mp3' 
        };
        for (const key in soundFiles) {
            sounds[key] = new Audio(soundFiles[key]);
        }
        sounds['musica-fundo'].loop = true;
        audioInitialized = true;
    } 

    function playSound(name) {
        if (!settings.sfx) return;
        if (!audioInitialized || !sounds[name]) return;
        const sound = sounds[name];
        if (name !== 'musica-fundo') {
            sound.currentTime = 0;
        }
        sound.play().catch(error => console.error(`Erro ao tocar o som '${name}':`, error));
    }

    function stopSound(name) {
        if (!audioInitialized || !sounds[name]) return;
        const sound = sounds[name];
        sound.pause();
        sound.currentTime = 0;
    }

    function startBackgroundMusic() { 
        if (!settings.music) return;
        if (!audioInitialized) return;
        const sound = sounds['musica-fundo'];
        sound.volume = 0.3; 
        sound.play().catch(error => console.error('Erro ao tocar m√∫sica de fundo:', error));
    }
    
    function stopBackgroundMusic() { 
        if (!audioInitialized) return;
        stopSound('musica-fundo');
    }

    
    function showItemDetails(item) {
        playSound('clique-ui'); 
        itemDetailName.textContent = item.name;
        itemDetailImg.src = getIconPathByColorMode(item);
        itemDetailImg.alt = item.name;
        itemDetailDesc.textContent = item.description;
        itemDetailFunFact.textContent = item.funFact;
        itemDetailRecycling.textContent = item.recyclingInfo;
        itemDetailModal.classList.remove('hidden');
        itemDetailModal.classList.add('flex');
        isPaused = true; // <-- ADICIONADO: Pausa ao abrir detalhes
    }

    function closeItemDetails() {
        playSound('clique-ui'); 
        itemDetailModal.classList.add('hidden');
        itemDetailModal.classList.remove('flex');
        // S√≥ despausa se o livro tamb√©m estiver fechado
        if (bookModal.classList.contains('hidden')) {
             isPaused = false;
        }
    }
    
    function redirecionarParaSelecao() {
        window.location.href = "selecao_de_fases.html"; 
    }

    // === ADICIONADO DA FASE 1: Fun√ß√£o de Orienta√ß√£o ===
    function handleOrientationChange(e) {
        const orientationWarning = document.getElementById('orientation-warning');
        if (e.matches) {
            // Se est√° em modo retrato, pausa o jogo e MOSTRA o aviso
            orientationWarning.classList.remove('hidden');
            orientationWarning.classList.add('flex');
            isPaused = true;
        } else {
            // Se est√° em modo paisagem, ESCONDE o aviso
            orientationWarning.classList.add('hidden');
            orientationWarning.classList.remove('flex');
            
            // E despausa, *a menos que* um modal j√° esteja aberto
            // Adaptado para os modais da Fase 2
            const isAnyModalOpen = bookModal.classList.contains('flex') ||
                                   stageTransitionScreen.classList.contains('flex') ||
                                   endScreen.classList.contains('flex') ||
                                   startScreen.classList.contains('flex') ||
                                   itemDetailModal.classList.contains('flex');
                                   
            if (!isShowingIntro && !isAnyModalOpen) {
                isPaused = false;
            }
        }
    }
    // === FIM DA ADI√á√ÉO ===

    function init() {
        startButton.addEventListener('click', () => { 
            initAudio(); 
            playSound('clique-ui'); 
            startIntroduction(); 
        });
    
        finalActionButton.addEventListener('click', () => {
            playSound('clique-ui'); 
            const texts = fase2LangData[settings.language];
            if (finalActionButton.textContent === texts.btn_continuar) {
                redirecionarParaSelecao(); 
            } else {
                startGame(); 
            }
        });

        backToMenuButton.addEventListener('click', () => {
            playSound('clique-ui');
            window.location.href = "../menu/menu_index.html";
        });

        nextStageButton.addEventListener('click', () => {
            playSound('clique-ui'); 
            handleNextButtonClick();
        });
        bookButton.addEventListener('click', () => {
            playSound('clique-ui'); 
            openBook();
        });
        bookModalClose.addEventListener('click', () => {
            playSound('clique-ui'); 
            closeBook();
        });
    
        itemDetailClose.addEventListener('click', closeItemDetails);
        itemDetailModal.addEventListener('click', (e) => { 
            if (e.target === itemDetailModal) closeItemDetails();
        });

        setupDragAndDrop(); // Para mouse/desktop
        setupTouchControls(); 
        setupBook();

        // === ADICIONADO DA FASE 1: Listeners de Orienta√ß√£o ===
        const portraitMediaQuery = window.matchMedia("(orientation: portrait)");
        portraitMediaQuery.addEventListener('change', handleOrientationChange);
        handleOrientationChange(portraitMediaQuery); // Checa a orienta√ß√£o inicial
        // === FIM DA ADI√á√ÉO ===
    }
    
    function startIntroduction() {
        startScreen.classList.add('hidden');
        isShowingIntro = true;
        introStep = 0;
        showNextIntroDialogue();
    }
    
    function showNextIntroDialogue() {
        if (introStep < introDialogues.length) {
            const dialogue = introDialogues[introStep];
            
            stageMacawSprite.dataset.spriteKey = 'macaw_falando'; 
            stageMacawSprite.src = AccessibilityManager.getUISprite('macaw_falando');

            document.getElementById('stage-title').textContent = dialogue.title;
            document.getElementById('stage-explanation').textContent = dialogue.text;
            stageTransitionScreen.classList.remove('hidden');
            stageTransitionScreen.classList.add('flex');
            isPaused = true; // <-- ADICIONADO: Pausa durante o di√°logo
            introStep++;
        } else {
            isShowingIntro = false;
            stageTransitionScreen.classList.add('hidden');
            isPaused = false; // <-- ADICIONADO: Despausa para come√ßar
            startGame();
        }
    }

    function handleNextButtonClick() {
        if (isShowingIntro) {
            showNextIntroDialogue();
        } else {
            resumeGame();
        }
    }

    function startGame() {
        stopGameIntervals();
        startScreen.classList.add('hidden');
        endScreen.classList.add('hidden');
        stageTransitionScreen.classList.add('hidden'); // Garante que est√° escondido
        gameHeader.classList.remove('hidden');
        gameMain.classList.remove('hidden');
        timer = INITIAL_TIME;
        totalScore = 0;
        currentStageIndex = 0;
        isPaused = false;
        setupStage();
        startTimer();
        scheduleRandomDialogue();
        startBackgroundMusic(); 
    }
    
    function stopGameIntervals() {
        clearInterval(timerInterval);
        clearTimeout(macawTimeout);
        clearTimeout(otherDialogueTimeout);
        stopBackgroundMusic(); 
        stopSound('alerta-cronometro'); 
    }
    
    function setupStage() {
        stageScore = 0;
        const stage = STAGES[currentStageIndex];
        const totalStages = STAGES.length;
        stageLabelEl.textContent = `${fase2LangData[settings.language].etapa_label} ${stage.stage}/${totalStages}`;
        updateScore(0);
        bins.forEach(bin => {
            bin.classList.toggle('active', stage.categories.includes(bin.dataset.category));
        });
        generateTrashItems();
    }

    function generateTrashItems() {
        const TRASH_ITEMS = getTranslatedTrashItems();
        trashSpawnArea.innerHTML = '';
        const stage = STAGES[currentStageIndex];
        const availableItems = [];
        stage.categories.forEach(cat => {
            TRASH_ITEMS[cat].forEach(item => {
                availableItems.push({ ...item, category: cat });
            });
        });

        // Modificado para gerar apenas os itens da meta (goal)
        for (let i = 0; i < stage.goal; i++) {
            const randomItem = availableItems[Math.floor(Math.random() * availableItems.length)];
            
            const trashEl = document.createElement('div');
            trashEl.className = 'trash-item';
            trashEl.style.backgroundImage = `url('${getIconPathByColorMode(randomItem)}')`;
            trashEl.draggable = true;
            trashEl.dataset.category = randomItem.category;
            trashEl.id = `trash-${i}-${Date.now()}`;
            trashEl.style.left = `${Math.random() * 95}%`; 
            trashEl.style.top = `${Math.random() * 95}%`;
            trashEl.style.transform = `rotate(${Math.random() * 360}deg)`;
            trashSpawnArea.appendChild(trashEl);
        }
    }

    function handleCorrectDrop(trashEl, binEl) {
        playSound('acerto'); 
        playSound('bonus-tempo'); 
        stageScore++;
        totalScore++;
        timer += TIME_BONUS;
        showMacawMessage(macawBonusMessage, 3000, 'feliz'); 
        updateScore(stageScore);
        updateTimerDisplay();
        trashEl.style.transition = 'transform 0.3s ease-out, opacity 0.3s ease-out';
        trashEl.style.transform = 'scale(0)';
        trashEl.style.opacity = '0';
        binEl.classList.add('correct-bin');
        setTimeout(() => binEl.classList.remove('correct-bin'), 700);
        setTimeout(() => {
            trashEl.remove(); 
            if (trashSpawnArea.children.length === 0) { 
                if (currentStageIndex < STAGES.length - 1) {
                    playSound('fim-fase'); 
                    setTimeout(advanceStage, 500); 
                } else {
                    playSound('fim-fase'); 
                    setTimeout(() => endGame(true), 500);
                }
            }
        }, 300);
    }

    function handleWrongDrop(binEl) {
        playSound('erro'); 
        showMacawMessage(getRandomDialogue('hints'), 5000, 'triste');
        binEl.classList.add('wrong-bin');
        setTimeout(() => binEl.classList.remove('wrong-bin'), 500);
    }

    function advanceStage() {
        isPaused = true;
        currentStageIndex++;
        const stage = STAGES[currentStageIndex];
        const stageDialogue = dialogues.stages[`stage${currentStageIndex + 1}`];
        
        stageMacawSprite.dataset.spriteKey = 'macaw_falando'; 
        stageMacawSprite.src = AccessibilityManager.getUISprite('macaw_falando');

        document.getElementById('stage-title').textContent = stage.title;
        document.getElementById('stage-explanation').textContent = stageDialogue;
        stageTransitionScreen.classList.remove('hidden');
        stageTransitionScreen.classList.add('flex');
    }

    function resumeGame() {
        stageTransitionScreen.classList.add('hidden');
        isPaused = false;
        setupStage();
    }

    function startTimer() {
        if (timerInterval) clearInterval(timerInterval);
        timerInterval = setInterval(() => {
            if (isPaused) return; 
            timer--;
            updateTimerDisplay();
            if (timer <= 15 && timer > 0) {
                timerEl.classList.add('timer-warning');
                if (settings.sfx && audioInitialized && (timer % 2 === 0)) { playSound('alerta-cronometro'); } 
            } else {
                timerEl.classList.remove('timer-warning');
                stopSound('alerta-cronometro'); 
            }
            if (timer <= 0) {
                timer = 0; // Trava em 0
                updateTimerDisplay();
                endGame(false);
            }
        }, 1000);
    }

    function updateTimerDisplay() {
        const minutes = Math.floor(timer / 60).toString().padStart(2, '0');
        const seconds = (timer % 60).toString().padStart(2, '0');
        timerEl.textContent = `${minutes}:${seconds}`;
    }

    function updateScore(currentStageScore) {
        const stage = STAGES[currentStageIndex];
        stageScoreEl.textContent = `${currentStageScore} / ${stage.goal}`; 
    }

    function showMacawMessage(text, duration = 4000, expression = 'falando') {
        if (macawTimeout) clearTimeout(macawTimeout);

        const spriteKey = `macaw_${expression}`; 
        macawSprite.dataset.spriteKey = spriteKey; 
        macawSprite.src = AccessibilityManager.getUISprite(spriteKey); 

        macawText.textContent = text;
        macawMessage.classList.remove('opacity-0');
        macawTimeout = setTimeout(() => {
            macawMessage.classList.add('opacity-0');
        }, duration);
    }

    function scheduleRandomDialogue() {
        if (otherDialogueTimeout) clearTimeout(otherDialogueTimeout);
        otherDialogueTimeout = setTimeout(() => {
            if (!isPaused && !isShowingIntro) {
                showMacawMessage(getRandomDialogue('other'), 4000, 'falando');
            }
            scheduleRandomDialogue();
        }, 20000 + Math.random() * 15000);
    }

    function endGame(isWinner) {
        isPaused = true; // Pausa o jogo
        stopGameIntervals();
        playSound('avaliacao-final'); 
        gameHeader.classList.add('hidden');
        gameMain.classList.add('hidden');
        document.getElementById('final-score').textContent = totalScore;
        const texts = fase2LangData[settings.language]; 
        const starsContainer = document.getElementById('stars-container');
        starsContainer.innerHTML = '';
        let stars = 0, message = "", title = "";
        let macawEndSpriteKey = 'macaw_triste'; 
        
        if (isWinner) {
            title = texts.end_title_win;
            stars = 3;
            message = dialogues.performance[2];
            macawEndSpriteKey = 'macaw_feliz'; 
            
            if (finalActionButton) {
                finalActionButton.setAttribute('data-key', 'btn_jogar_novo'); 
                finalActionButton.textContent = texts.btn_jogar_novo; 
            }
        } else {
            title = texts.end_title_timeup;
            const totalPossibleScore = STAGES.reduce((acc, stage) => acc + stage.goal, 0);
            const percentage = totalScore / totalPossibleScore;
            if (percentage > 0.7) {
                stars = 2;
                message = dialogues.performance[1];
                macawEndSpriteKey = 'macaw_feliz'; 
            } else if (totalScore > 0) {
                stars = 1;
                message = dialogues.performance[0];
                macawEndSpriteKey = 'macaw_curiosa'; 
            } else {
                stars = 0;
                message = getRandomDialogue('defeat');
                macawEndSpriteKey = 'macaw_triste'; 
            }
            if (finalActionButton) {
                finalActionButton.setAttribute('data-key', 'btn_jogar_novo');
                finalActionButton.textContent = texts.btn_jogar_novo; 
            }
        }
        
        endMacawSprite.dataset.spriteKey = macawEndSpriteKey; 
        endMacawSprite.src = AccessibilityManager.getUISprite(macawEndSpriteKey);

        for (let i = 0; i < 3; i++) {
            starsContainer.appendChild(document.createElement('span')).textContent = i < stars ? '‚≠ê' : '‚òÜ';
        }
        document.getElementById('end-title').textContent = title;
        document.getElementById('end-score-text-before').textContent = texts.end_score_text; 
        document.getElementById('end-score-text-after').textContent = texts.end_score_items;
        document.getElementById('end-message').textContent = message;
        endScreen.classList.remove('hidden');
        endScreen.classList.add('flex');
    }

    function setupDragAndDrop() {
        document.addEventListener('dragstart', e => { 
            if (e.target.classList.contains('trash-item')) { 
                if (isPaused || isShowingIntro) {
                    e.preventDefault();
                    return;
                }
                playSound('pegar-soltar'); 
                e.dataTransfer.setData('text/plain', e.target.dataset.category); 
                e.dataTransfer.setData('elementId', e.target.id); 
                setTimeout(() => e.target.classList.add('opacity-50'), 0); 
            } 
        });
        document.addEventListener('dragend', e => { 
            if (e.target.classList.contains('trash-item')) { 
                e.target.classList.remove('opacity-50'); 
            } 
        });
        
        bins.forEach(bin => { 
            bin.addEventListener('dragover', e => { 
                e.preventDefault(); 
                if (bin.classList.contains('active')) { 
                    bin.classList.add('drag-over'); 
                } 
            }); 
            
            bin.addEventListener('dragleave', e => { bin.classList.remove('drag-over'); }); 
            
            bin.addEventListener('drop', e => { 
                e.preventDefault(); 
                if (isPaused) return;
                bin.classList.remove('drag-over'); 
                const droppedCategory = e.dataTransfer.getData('text/plain'); 
                const binCategory = bin.dataset.category; 
                const elementId = e.dataTransfer.getData('elementId'); 
                const trashEl = document.getElementById(elementId); 
                const isCorrect = (trashEl && droppedCategory === binCategory);
                const isActive = bin.classList.contains('active'); 
                if (isActive && isCorrect) {
                    handleCorrectDrop(trashEl, bin); 
                } else {
                    handleWrongDrop(bin); 
                } 
            }); 
        });
    }

    // --- IN√çCIO: FUN√á√ïES DE CONTROLE DE TOQUE (TOUCH) (ADI√á√ÉO) ---

    function setupTouchControls() {
        document.addEventListener('touchstart', handleTouchStart, { passive: false });
        document.addEventListener('touchmove', handleTouchMove, { passive: false });
        document.addEventListener('touchend', handleTouchEnd);
    }

    function handleTouchStart(e) {
        const trashEl = e.target.closest('.trash-item');
        if (!trashEl || isPaused || isShowingIntro) return;
        e.preventDefault();
        activeTrashEl = trashEl;
        playSound('pegar-soltar');
        const touch = e.touches[0];
        const spawnAreaRect = trashSpawnArea.getBoundingClientRect();
        const rect = activeTrashEl.getBoundingClientRect();
        initialTouchX = touch.clientX - rect.left;
        initialTouchY = touch.clientY - rect.top;
        originalTrashLeft = activeTrashEl.style.left;
        originalTrashTop = activeTrashEl.style.top;
        originalTrashTransform = activeTrashEl.style.transform;
        activeTrashEl.classList.add('opacity-50');
        activeTrashEl.style.zIndex = 100;
        activeTrashEl.style.transition = 'none'; 
        let newX = touch.clientX - spawnAreaRect.left - initialTouchX;
        let newY = touch.clientY - spawnAreaRect.top - initialTouchY;
        activeTrashEl.style.left = `${newX}px`;
        activeTrashEl.style.top = `${newY}px`;
        activeTrashEl.style.transform = 'scale(1.1)'; 
    }

    function handleTouchMove(e) {
        if (!activeTrashEl || isPaused || isShowingIntro) return;
        e.preventDefault(); 
        const touch = e.touches[0];
        const spawnAreaRect = trashSpawnArea.getBoundingClientRect();
        let newX = touch.clientX - spawnAreaRect.left - initialTouchX;
        let newY = touch.clientY - spawnAreaRect.top - initialTouchY;
        activeTrashEl.style.left = `${newX}px`;
        activeTrashEl.style.top = `${newY}px`;
        activeTrashEl.style.display = 'none';
        const elAtPoint = document.elementFromPoint(touch.clientX, touch.clientY);
        activeTrashEl.style.display = ''; 
        const dropTarget = elAtPoint ? elAtPoint.closest('.bin') : null;
        if (dropTarget !== currentDroppable) {
            if (currentDroppable) {
                currentDroppable.classList.remove('drag-over');
            }
            currentDroppable = dropTarget;
            if (currentDroppable && currentDroppable.classList.contains('active')) {
                currentDroppable.classList.add('drag-over');
            }
        }
    }

    function handleTouchEnd(e) {
        if (!activeTrashEl) return;
        const elToReset = activeTrashEl; 
        activeTrashEl = null; 
        let droppedSuccessfully = false;
        if (currentDroppable) {
            const droppedCategory = elToReset.dataset.category;
            const binCategory = currentDroppable.dataset.category;
            const isCorrect = (droppedCategory === binCategory);
            const isActive = currentDroppable.classList.contains('active');
            if (isActive && isCorrect) {
                handleCorrectDrop(elToReset, currentDroppable);
                droppedSuccessfully = true;
            } else {
                handleWrongDrop(currentDroppable);
            }
            currentDroppable.classList.remove('drag-over');
            currentDroppable = null;
        }
        if (!droppedSuccessfully) {
            elToReset.style.transition = 'left 0.3s ease, top 0.3s ease, transform 0.3s ease, opacity 0.3s ease, z-index 0.3s ease';
            elToReset.classList.remove('opacity-50');
            elToReset.style.zIndex = 15; 
            elToReset.style.left = originalTrashLeft;
            elToReset.style.top = originalTrashTop;
            elToReset.style.transform = originalTrashTransform;
            setTimeout(() => {
                elToReset.style.transition = 'transform 0.2s ease, opacity 0.3s ease'; 
            }, 300);
        }
    }
    // --- FIM: FUN√á√ïES DE CONTROLE DE TOQUE (TOUCH) ---


    // --- FUN√á√ïES DO GUIA/LIVRO (MANTIDO) ---
    function setupBook() {
        prepareBookContent();
        bookButton.addEventListener('click', () => { openBook(); }); 
        bookModalClose.addEventListener('click', () => { closeBook(); }); 
        prevPageBtn.addEventListener('click', () => { playSound('clique-ui'); changePage(-1); }); 
        nextPageBtn.addEventListener('click', () => { playSound('clique-ui'); changePage(1); }); 
        itemDetailClose.addEventListener('click', closeItemDetails); 
    }

    function prepareBookContent() { 
        const TRASH_ITEMS = getTranslatedTrashItems();
        allBookItems = [];
        const categoryOrder = ['organicos', 'papel', 'metais', 'vidros', 'plasticos', 'rejeitos'];
        categoryOrder.forEach(categoryKey => {
            TRASH_ITEMS[categoryKey].forEach(item => { 
                allBookItems.push({ ...item, groupName: TRASH_GROUP_NAMES[categoryKey] }); 
            });
        });
        calculateBookPages(); 
    }

    function calculateBookPages() {
        bookPages = [];
        const itemsPerSpread = ITEMS_PER_SPREAD; 
        for (let i = 0; i < allBookItems.length; i += itemsPerSpread) {
             bookPages.push(allBookItems.slice(i, i + itemsPerSpread));
        }
    }
    
    function renderPage(pageNumber) { 
        currentPage = pageNumber; 
        const pageData = bookPages[currentPage - 1] || [];
        pageSections.forEach(section => section.innerHTML = ''); 
        const sectionMap = {}; 
        pageSections.forEach((section, index) => {
            section.innerHTML = '';
            const startIndex = index * ITEMS_PER_ROW;
            const endIndex = startIndex + ITEMS_PER_ROW;
            const itemsInSection = pageData.slice(startIndex, endIndex);
            if (itemsInSection.length > 0) {
                const groupName = itemsInSection[0].groupName; 
                let itemsContainer = document.createElement('div');
                itemsContainer.className = 'items-container'; 
                section.appendChild(itemsContainer);
                sectionMap[index] = { container: itemsContainer, items: itemsInSection };
            }
        });
        Object.values(sectionMap).forEach(data => {
            const itemsContainer = data.container;
            data.items.forEach(item => {
                const itemEl = document.createElement('div');
                itemEl.className = 'book-item'; 
                itemEl.onclick = () => { showItemDetails(item); };
                const img = document.createElement('img');
                img.src = getIconPathByColorMode(item); 
                img.alt = item.name;
                img.className = ''; 
                const name = document.createElement('p');
                name.textContent = item.name;
                name.className = ''; 
                itemEl.appendChild(img);
                itemEl.appendChild(name);
                itemsContainer.appendChild(itemEl);
            });
        });
        updateBookNavigation(); 
    }
    
    function updateBookNavigation() { 
        const totalPages = bookPages.length;
        const texts = fase2LangData[settings.language];
        pageIndicator.textContent = `${texts.livro_pagina} ${currentPage} / ${totalPages}`; 
        prevPageBtn.disabled = currentPage === 1; 
        nextPageBtn.disabled = currentPage === totalPages; 
    }
    
    function changePage(direction) { 
        const newPage = currentPage + direction; 
        const totalPages = bookPages.length;
        if (newPage > 0 && newPage <= totalPages) { 
            bookPagesContainer.classList.add('fade-out'); 
            setTimeout(() => { 
                renderPage(newPage); 
                bookPagesContainer.classList.remove('fade-out'); 
            }, 300); 
        } 
    }

    function openBook() { 
        isPaused = true; 
        prepareBookContent(); 
        renderPage(1); 
        bookModal.classList.remove('hidden'); 
        bookModal.classList.add('flex'); 
    }

    function closeBook() { 
        isPaused = false; 
        bookModal.classList.add('hidden'); 
        bookModal.classList.remove('flex'); 
    }

    // --- INICIA O JOGO ---
    loadSettings(); 
    init();
};